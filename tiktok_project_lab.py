# -*- coding: utf-8 -*-
"""TikTok project lab.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-QFl484gsZjVlnCf3asaTOb9HVB-PmDb

# **TikTok Project**
**Course 2 - Get Started with Python**

Welcome to the TikTok Project!

You have just started as a data professional at TikTok.

The team is still in the early stages of the project. You have received notice that TikTok's leadership team has approved the project proposal. To gain clear insights to prepare for a claims classification model, TikTok's provided data must be examined to begin the process of exploratory data analysis (EDA).

A notebook was structured and prepared to help you in this project. Please complete the following questions.

# **Identify data types and compile summary information**

### **Task 1. Understand the situation**

*   How can you best prepare to understand and organize the provided information?


*Begin by exploring your dataset and consider reviewing the Data Dictionary.*

==> ENTER YOUR RESPONSE HERE




Review the data dictionary to understand what each column of data mean and understand what columns have a specific datatype that can be manipulated numerically and otherwise.
This also give an understanidn if the columns has the correct datatype or it needs to be changed.

### **Task 2a. Imports and data loading**

Start by importing the packages that you will need to load and explore the dataset.
"""

# Import packages
### YOUR CODE HERE ###
import pandas as pd
import numpy as np

"""Then, load the dataset into a dataframe. Creating a dataframe will help you conduct data manipulation, exploratory data analysis (EDA), and statistical activities.se continue with this activity by completing the following instructions."""

# Load dataset into dataframe
data = pd.read_csv("tiktok_dataset.csv")

"""### **Task 2b. Understand the data - Inspect the data**

View and inspect summary information about the dataframe by **coding the following:**

1. `data.head(10)`
2. `data.info()`
3. `data.describe()`

*Consider the following questions:*

**Question 1:** When reviewing the first few rows of the dataframe, what do you observe about the data? What does each row represent?

**Question 2:** When reviewing the `data.info()` output, what do you notice about the different variables? Are there any null values? Are all of the variables numeric? Does anything else stand out?

**Question 3:** When reviewing the `data.describe()` output, what do you notice about the distributions of each variable? Are there any questionable values? Does it seem that there are outlier values?
















"""

# Display and examine the first ten rows of the dataframe
### YOUR CODE HERE ###
data.head(10)

# Get summary info
### YOUR CODE HERE ###
data.info()
#there seem to be some null values and not all are numeric

# Get summary statistics
### YOUR CODE HERE ###
data.describe()

"""===> ENTER YOUR RESPONSE TO QUESTIONS 1-3 HERE

Q1. The dataframe contains a collection of categorical, text, and numerical data. Each row represents a distinct TikTok video that presents either a claim or an opinion and the accompanying metadata about that video.

Q2. The dataframe contains five float64s, three int64s, and four objects. There are 19,382 observations, but some of the variables are missing values, including claim status, the video transcripton, and all of the count variables.

Q3. There is an issue with the count of video id. Some columns are missing in the Description table. max value and SD for download count and some other count columns is way above all percentiles, there is perhaps as outlier.

### **Task 2c. Understand the data - Investigate the variables**

In this phase, you will begin to investigate the variables more closely to better understand them.

You know from the project proposal that the ultimate objective is to use machine learning to classify videos as either claims or opinions. A good first step towards understanding the data might therefore be examining the `claim_status` variable. Begin by determining how many videos there are for each different claim status.
"""

# What are the different values for claim status and how many of each are in the data?
### YOUR CODE HERE ###
data['claim_status'].value_counts()

"""**Question:** What do you notice about the values shown?
The claims are more than opinions and the total is qual to the count previously obtained

Next, examine the engagement trends associated with each different claim status.

Start by using Boolean masking to filter the data according to claim status, then calculate the mean and median view counts for each claim status.
"""

# What is the average view count of videos with "claim" status?
### YOUR CODE HERE ###
mask = data['claim_status'] == 'claim'
status = data['video_view_count'][mask]
print('Mean view count claims: ' + str(status.mean()))
print('Median view count claims: ' + str(status.median()))

# What is the average view count of videos with "opinion" status?
### YOUR CODE HERE ###
mask1 = data['claim_status'] == 'opinion'
avg1 = data['video_view_count'][mask1].mean()
median1 = data['video_view_count'][mask1].median()

print('Mean view count opinion: ' + str(avg1))
print('Median view count claims: ' + str(median1))

"""**Question:** What do you notice about the mean and media within each claim category?

Now, examine trends associated with the ban status of the author.

Use `groupby()` to calculate how many videos there are for each combination of categories of claim status and author ban status.
"""

# Get counts for each group combination of claim status and author ban status
### YOUR CODE HERE ###
combo = data.groupby(by= ['claim_status', 'author_ban_status']).count()
combo[['video_id']]

"""**Question:** What do you notice about the number of claims videos with banned authors? Why might this relationship occur?

There are many more claim videos with banned authors than there are opinion videos with banned authors. This could mean a number of things, including the possibilities that:

Claim videos are more strictly policed than opinion videos
Authors must comply with a stricter set of rules if they post a claim than if they post an opinion
Also, it should be noted that there's no way of knowing if claim videos are inherently more likely than opinion videos to result in author bans, or if authors who post claim videos are more likely to post videos that violate terms of service.

Finally, while you can use this data to draw conclusions about banned/active authors, you cannot draw conclusions about banned videos. There's no way of determining whether a particular video caused the ban, and banned authors could have posted videos that complied with the terms of service.

Continue investigating engagement levels, now focusing on `author_ban_status`.

Calculate the median video share count of each author ban status.
"""

### YOUR CODE HERE ###
ban_stat = (data.groupby(['author_ban_status'])).median()
ban_stat[['video_view_count', 'video_like_count', 'video_share_count']]

# What's the median video share count of each author ban status?
### YOUR CODE HERE ###
ban_stat[['video_share_count']]

"""**Question:** What do you notice about the share count of banned authors, compared to that of active authors? Explore this in more depth.

The median share count for banned authors is over 33 times more than the share count for active authors.

Use `groupby()` to group the data by `author_ban_status`, then use `agg()` to get the count, mean, and median of each of the following columns:
* `video_view_count`
* `video_like_count`
* `video_share_count`

Remember, the argument for the `agg()` function is a dictionary whose keys are columns. The values for each column are a list of the calculations you want to perform.
"""

### YOUR CODE HERE ###
data.groupby('author_ban_status').agg({'video_view_count': ['count', 'mean', 'median'],
                                        'video_like_count': ['count', 'mean', 'median'],
                                        'video_share_count': ['count', 'mean', 'median']})

"""**Question:** What do you notice about the number of views, likes, and shares for banned authors compared to active authors?
Banned authors get double more views, likes and shares than active authors.

Now, create three new columns to help better understand engagement rates:
* `likes_per_view`: represents the number of likes divided by the number of views for each video
* `comments_per_view`: represents the number of comments divided by the number of views for each video
* `shares_per_view`: represents the number of shares divided by the number of views for each video
"""

# Create a likes_per_view column
### YOUR CODE HERE ###
data['likes_per_view'] = data['video_like_count']/data['video_view_count']

# Create a comments_per_view column
### YOUR CODE HERE ###
data['comments_per_view'] = data['video_comment_count']/data['video_view_count']

# Create a shares_per_view column
### YOUR CODE HERE ###
data['shares_per_view'] = data['video_share_count']/data['video_view_count']
data

"""Use `groupby()` to compile the information in each of the three newly created columns for each combination of categories of claim status and author ban status, then use `agg()` to calculate the count, the mean, and the median of each group."""

### YOUR CODE HERE ###
data.groupby(['claim_status', 'author_ban_status']).agg({'likes_per_view': ['count', 'mean', 'median'],
                                                        'comments_per_view': ['count', 'mean', 'median'],
                                                        'shares_per_view': ['count', 'mean', 'median']})

"""**Question:**

How does the data for claim videos and opinion videos compare or differ? Consider views, comments, likes, and shares.
We know that videos by banned authors and those under review tend to get far more views, likes, and shares than videos by non-banned authors. However, when a video does get viewed, its engagement rate is less related to author ban status and more related to its claim status.

Also, we know that claim videos have a higher view rate than opinion videos, but this tells us that claim videos also have a higher rate of likes on average, so they are more favorably received as well. Furthermore, they receive more engagement via comments and shares than opinion videos.

Note that for claim videos, banned authors have slightly higher likes/view and shares/view rates than active authors or those under review. However, for opinion videos, active authors and those under review both get higher engagement rates than banned authors in all categories.

### **Given your efforts, what can you summarize for Rosie Mae Bradshaw and the TikTok data team?**

*Note for Learners: Your answer should address TikTok's request for a summary that covers the following points:*

*   What percentage of the data is comprised of claims and what percentage is comprised of opinions?
*   What factors correlate with a video's claim status?
*   What factors correlate with a video's engagement level?

==> ENTER YOUR RESPONSE HERE

50.34% of data is comprised of claims and 49.65% is made up of opinion

Engagement level is strongly correlated with claim status. This should be a focus of further inquiry.

Videos with banned authors have significantly higher engagement than videos with active authors. Videos with authors under review fall between these two categories in terms of engagement levels.
"""

perc = data.groupby('claim_status').count()[['video_id']]
sum_perc = perc['video_id'].sum()
perc['perentage'] = (perc['video_id']/sum_perc) *100
perc

"""**Congratulations!** You've completed this lab."""